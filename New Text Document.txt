#include <stdio.h>
#include<stdlib.h>
int n,ct[10],bt[10],rbt[10],at[10]={0},tq,choice,wt[10],tat[10];

void rr();
void srtf();

void readBT(){
    printf("enter the burst time\n");
    for(int i =0;i<n;i++){
        scanf("%d",&bt[i]);
        rbt[i]=bt[i];
    }
}

void readAT(){
    printf("enter the arrival time\n");
    for(int i=0;i<n;i++)
        scanf("%d",&at[i]);
}














%{
  #include<stdio.h>
  #include<string.h>
  void YYFAIL();
  int nooper=0,noopend=0,valid=0,i=0,j=0;
char opert[10][10],opend[10][10];
%}
%%
"(" { valid =1;}
")" { valid=0;}
"+"|"*" {nooper++;strcpy(opert[i],yytext);i++;}
[0-9]+ {noopend++,strcpy(opend[j],yytext);j++;}
[^+*]"("[^0-9] YYFAIL();
%%
int main(){
  int k=0;
  printf("enter the expression");
  yylex();
  if(valid==0 && (noopend-nooper)==1){
    printf("the expresion is valid");
    printf("operators\n");
      for(k=0;k<i;k++)
        printf("%s",opert[k]);
      printf("operand\n");
      for(k=0;k<j;k++)
        printf("%s",opert[k]);
    }
    else{
      printf("invalid string");
      return 0;
    }
  }
void YYFAIL(){
  printf("invalid");
}


void display(){
    int stat=0 ,swt =0;
    for(int i=0;i<n;i++){
        tat[i]=ct[i]-at[i];
        wt[i]=tat[i]-bt[i];
        swt+=wt[i];
        stat+=tat[i];
    }
    printf("PNO\tAT\tBT\tCT\tTAT\tWT\n");
for (int i = 0; i < n; i++)
printf("%d\t%d\t%d\t%d\t%d\t%d\n", i, at[i], bt[i], ct[i], tat[i],
wt[i]);
printf("Average TAT : %f\n", (float) stat / n);
printf("Average WT : %f\n", (float) swt / n);
}



void rr(){
    int count =0,time=0,i;
    while(1){
        for(i=0;i<n;i++){
            if(rbt[i]>tq){
                rbt[i]-=tq;
                time+=tq;
            }
            else if(rbt[i]!=0){
                time+=rbt[i];
                rbt[i]=0;
                count++;
                ct[i]=time;
            }
        }
         if(count==n)
                break;
    }
    display();
}

void srtf() {
int count = 0, i, time;
rbt[9] = 999;
for (time = 0; count != n; time++) {
int smallest = 9;

        for (i = 0; i < n; i++) {
if (at[i] <= time && rbt[i] < rbt[smallest] && rbt[i] > 0)
smallest = i;
        }
        rbt[smallest]--;
if (rbt[smallest] == 0) {
count++;
ct[smallest] = time + 1;
        }
    }
    display();
}


int main(){
    setbuf(stdout,NULL);
    for(;;){
        printf("\n1)RR\n2)srtf\n3)exit\n");
        printf("enter the choice \n");
        scanf("%d",&choice);
        switch(choice){
            case 1: 
            printf("ROUND ROBIN\n");
            printf("enter the number of process\n");
            scanf("%d",&n);
            printf("enter the time quantum\n");
            scanf("%d",&tq);
            readBT();
            rr();
            break;
            case 2:
            printf("SRTF\n");
            printf("enter the number of process\n");
            scanf("%d",&n);
            readBT();
            readAT();
            srtf();
            display();
            break;
            case 3:
            exit(0);
        }
    }
    return 0;
}





  #include<stdio.h>
  int com =0;
%}
%%
"//".* {com++;}
"/*"([^*]|\*+[^*/])*\*+"/" {com++;}
.|\n {fprintf(yyout,"%s",yytext);}
%%
int main(int argc ,char *argv[]){
  if(argc!=3){
    printf("error");
    exit(0);
  }
  yyin=fopen(argc[1],"r");
  yyout= fopen(argc[2],"w");
  yylex();
  printf("number of comment lines= %d\n",com);
  return 0;
}




